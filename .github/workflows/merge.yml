name: Merge Develop to Main

on:
    schedule:
        - cron: '0 0 * * *'
    workflow_dispatch:

permissions:
    contents: write
    pull-requests: write

jobs:
    merge-to-main:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout develop branch
              uses: actions/checkout@v4
              with:
                  ref: develop

            - name: Cache npm dependencies
              uses: actions/cache@v3
              id: npm-cache
              with:
                  path: |
                      ~/.npm
                      node_modules
                  key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-npm-

            - name: Cache Playwright browsers
              uses: actions/cache@v3
              id: playwright-cache
              with:
                  path: |
                      ~/.cache/ms-playwright
                  key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-playwright-

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 'lts/*'
                  cache: 'npm'

            - name: Install dependencies
              if: steps.npm-cache.outputs.cache-hit != 'true'
              run: npm ci

            - name: Install Playwright Browsers
              if: steps.playwright-cache.outputs.cache-hit != 'true'
              run: npx playwright install chromium & npx playwright install webkit --with-deps
              env:
                  CICD_WEB_URL: ${{ secrets.CICD_WEB_URL }}

            - name: Run e2e tests
              run: npm run e2e-tests
            - uses: actions/upload-artifact@v4
              if: ${{ !cancelled() }}
              with:
                  name: playwright-report
                  path: playwright-report/
                  retention-days: 7

            - name: Get commit messages since last merge
              id: commit-messages
              run: |
                  # Get the last commit hash on main branch
                  git fetch origin main
                  LAST_MAIN_COMMIT=$(git rev-parse origin/main)

                  # Get all commit messages from develop since the last main commit
                  COMMIT_MESSAGES=$(git log --pretty=format:"%s" $LAST_MAIN_COMMIT..HEAD)

                  # Escape newlines for GitHub Actions
                  COMMIT_MESSAGES_ESCAPED=$(echo "$COMMIT_MESSAGES" | sed ':a;N;$!ba;s/\n/\\n/g')

                  echo "commit_messages<<EOF" >> $GITHUB_OUTPUT
                  echo "$COMMIT_MESSAGES_ESCAPED" >> $GITHUB_OUTPUT
                  echo "EOF" >> $GITHUB_OUTPUT

            - name: Merge develop -> main
              uses: devmasx/merge-branch@master
              with:
                  type: now
                  from_branch: develop
                  target_branch: main
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  message: |
                      Automated merge from develop to main

                      Commits included:
                      ${{ steps.commit-messages.outputs.commit_messages }}

            - name: Trigger production deployment
              uses: peter-evans/repository-dispatch@v2
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  event-type: merge_to_main
                  client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
